on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        platforms: ["linux-x64", "osx-x64", "win-x64", "osx-arm64"]
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Extract version
        id: extract_version
        run: |
          echo "Extracting version..."
          version=$(echo "${{ github.ref }}" | sed 's/refs\/tags\/v//' | tr -d '\n')
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "Version extracted: $version"

      - name: Restore packages
        run: dotnet restore

      - name: Build project
        run: dotnet publish -r ${{ matrix.platforms }} -c Release --self-contained /p:Version=$VERSION

      - name: Determine if prerelease
        id: determine_prerelease
        run: |
          if [[ $VERSION == *"preview"* ]]; then
            echo "::set-output name=is_prerelease::true"
          else
            echo "::set-output name=is_prerelease::false"
          fi
        shell: bash
      
      - name: Create release zips
        run: |
          mkdir -p zips
          zip -j "zips/aelf-contract-patcher-${{ matrix.platforms }}-v${{ env.VERSION }}.zip" \
          "AElf.ContractPatcher/bin/Release/net8.0/${{ matrix.platforms }}/publish"/*

      - name: Upload zips to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zips/aelf-contract-patcher-${{ matrix.platforms }}-v${{ env.VERSION }}.zip
          asset_name: aelf-contract-patcher-${{ matrix.platforms }}-v${{ env.VERSION }}.zip
          tag: ${{ github.ref }}
          prerelease: ${{ steps.determine_prerelease.outputs.is_prerelease }}
